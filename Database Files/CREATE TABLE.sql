--PANACEA pass: panacea
CREATE TABLE PERSON (
	ID NUMBER(10, 0) NOT NULL,
	USER_ID VARCHAR2(15) NOT NULL,
	FIRST_NAME VARCHAR2(25) NOT NULL,
	LAST_NAME VARCHAR2(25) NOT NULL,
	EMAIL VARCHAR2(50) ,
	PHONE_NUM VARCHAR2(40),
	IMAGE VARCHAR2(300),
	GENDER VARCHAR2(1) NOT NULL,
	ADDRESS VARCHAR2(100),
	DATE_OF_BIRTH DATE,
	PASSWORD VARCHAR2(50) NOT NULL,
	DATE_CREATED DATE NOT NULL,
	
	PRIMARY KEY (ID)
);
	

	
CREATE TABLE DOCTOR (
	ID NUMBER(10, 0) NOT NULL,
	HIRE_DATE DATE,
	DEPARTMENT VARCHAR2(40) NOT NULL,
	DESIGNATION VARCHAR2(30) NOT NULL,
	QUALIFICATION VARCHAR2(100) NOT NULL,
	STATUS VARCHAR2(12),
	DEPARTMENT_HEAD_ID NUMBER(10,0),
	VISITING_FEE NUMBER(5,0),
	
	PRIMARY KEY (ID),
	
	CONSTRAINT FK_DOCTOR FOREIGN KEY(ID) REFERENCES PERSON(ID) ON DELETE CASCADE,
	CONSTRAINT FK_DOCTOR_HEAD_ID FOREIGN KEY(DEPARTMENT_HEAD_ID) REFERENCES PERSON(ID) ON DELETE SET NULL
	);
	
	
CREATE TABLE EMPLOYEE (
	ID NUMBER(10, 0) NOT NULL,
	HIRE_DATE DATE,
	CATEGORY VARCHAR2(40) NOT NULL,
	EDUCATION VARCHAR2(40),
	TRAINING VARCHAR2(100),
	SALARY NUMBER(10, 2) NOT NULL,
	COMMISSION_PCT NUMBER(4, 2),
	
	PRIMARY KEY (ID),
	
	CONSTRAINT FK_EMPLOYEE FOREIGN KEY(ID) REFERENCES PERSON(ID) ON DELETE CASCADE
);



CREATE TABLE PATIENT(
	ID NUMBER(10,0) NOT NULL,
	BIO VARCHAR2(200),
	ID_STATUS VARCHAR2(3), -- CREATE TRIGGER
	
	PRIMARY KEY(ID),
	CONSTRAINT FK_PATIENT_USER_ID FOREIGN KEY(ID) REFERENCES PERSON(ID) ON DELETE CASCADE
);



CREATE TABLE TIME_TABLE (
	TIME_ID NUMBER(3,0) NOT NULL,
	START_TIME VARCHAR2(10) NOT NULL,
	END_TIME VARCHAR2(10),
	SHIFT_TITLE VARCHAR2(25) NOT NULL,
	
	PRIMARY KEY (TIME_ID)
);




CREATE TABLE BLOCK (
	BLOCK_ID VARCHAR2(10) NOT NULL,
	CATEGORY VARCHAR2(50), -- CHANGED HERE
	INCHARGE_ID NUMBER(10, 0),
	WORKING_STUFFS NUMBER(3, 0),
	
	PRIMARY KEY (BLOCK_ID),
	
	CONSTRAINT FK_BLK_DOC FOREIGN KEY (INCHARGE_ID) REFERENCES PERSON(ID) ON DELETE SET NULL
);



CREATE TABLE SCHEDULE (
	SCHEDULE_ID NUMBER(10, 0) NOT NULL,
	SCHEDULE_DATE DATE NOT NULL,
	ID NUMBER(10,0),
	TIME_ID NUMBER(3,0) NOT NULL,
	BLOCK_ID VARCHAR2(10),
	
	PRIMARY KEY (SCHEDULE_ID),
	
	CONSTRAINT FK_USER_ID FOREIGN KEY(ID) REFERENCES PERSON(ID) ON DELETE CASCADE,
	CONSTRAINT FK_TIME_ID FOREIGN KEY(TIME_ID) REFERENCES TIME_TABLE(TIME_ID) ON DELETE SET NULL,
	CONSTRAINT FK_SHCEDULE_BLOCK_ID FOREIGN KEY(BLOCK_ID) REFERENCES BLOCK(BLOCK_ID) ON DELETE SET NULL
);
		
alter table schedule drop constraint 	
		

CREATE TABLE APPOINTMENT (
	APP_SL_NO NUMBER(22, 0) NOT NULL,
	PATIENT_ID NUMBER(10, 0) NOT NULL,
	DOCTOR_ID NUMBER(10, 0) NOT NULL,
	APPNT_DATE DATE NOT NULL, -- CREATE TRIGGER HERE
	PROB_DESC VARCHAR2(500),
	STATUS VARCHAR2(10),
	EST_APPNT_DATE DATE,
	TIME_ID NUMBER(3, 0) NOT NULL,
	
	PRIMARY KEY (APP_SL_NO),
	
	CONSTRAINT FK_APP_PAT_ID FOREIGN KEY (PATIENT_ID) REFERENCES PERSON(ID) ON DELETE CASCADE,
	CONSTRAINT FK_APP_DOC_ID FOREIGN KEY (DOCTOR_ID) REFERENCES PERSON(ID) ON DELETE SET NULL,
	CONSTRAINT FK_APP_TIME_ID FOREIGN KEY(TIME_ID) REFERENCES TIME_TABLE(TIME_ID) ON DELETE SET NULL
	);

CREATE TABLE ROOM_ADMISSION (
	ADMISSION_SL NUMBER(10, 0) NOT NULL,
	PATIENT_ID NUMBER(10, 0) NOT NULL,
	ROOM_NO NUMBER(3, 0) NOT NULL,
	ADMISSION_DATE DATE,
	RELEASE_DATE DATE,
	
	PRIMARY KEY (ADMISSION_SL),
	
	CONSTRAINT FK_ADMS_PAT_ID FOREIGN KEY (PATIENT_ID) REFERENCES PERSON(ID) ON DELETE CASCADE,
	CONSTRAINT FK_ADMS_ROOM_NO FOREIGN KEY (ROOM_NO) REFERENCES ROOM(ROOM_NO) ON DELETE CASCADE
	);
	
	
CREATE TABLE SERVICE (
	SERVICE_ID NUMBER(10, 0) NOT NULL,
	CATEGORY VARCHAR2(10) NOT NULL,
	SERVICE_NAME VARCHAR2(25) NOT NULL,
	SERVICE_DESC VARCHAR2(500) NOT NULL,
	COST NUMBER(10, 0) NOT NULL,
	DEPARTMENT VARCHAR2(25), 
	
	PRIMARY KEY(SERVICE_ID)
	);
	


CREATE TABLE DIAGNOSIS (
	DIAGNOSIS_ID NUMBER(10, 0) NOT NULL,
	SERVICE_RESULTS VARCHAR2(60),
	MEDICINE VARCHAR2(100),
	DIAG_DESC VARCHAR2(500),
	
	PRIMARY KEY(DIAGNOSIS_ID)
	);
	
	
	
	
CREATE TABLE MEDICINE (
	MED_ID NUMBER(10,0) NOT NULL,
	MED_NAME VARCHAR2(20) NOT NULL,
	GENRE VARCHAR2(20) NOT NULL,
	STOCK_STATUS VARCHAR2(2), 
	
	PRIMARY KEY (MED_ID)
	);
	
	
	
CREATE TABLE CHECKUP (
	CHECKUP_ID NUMBER(10, 0) NOT NULL,
	APP_SL_NO NUMBER(22, 0) ,
	DIAGNOSIS_ID NUMBER(10, 0), 
	CHECKUP_DATE DATE,
	
	PRIMARY KEY (CHECKUP_ID),
	
	CONSTRAINT FK_CHECK_APP FOREIGN KEY(APP_SL_NO) REFERENCES APPOINTMENT(APP_SL_NO) ON DELETE CASCADE,
	CONSTRAINT FK_CHECK_DIAG FOREIGN KEY(DIAGNOSIS_ID) REFERENCES DIAGNOSIS(DIAGNOSIS_ID) ON DELETE SET NULL
);




CREATE TABLE TEST_RESULTS (
	TEST_RESULT_ID NUMBER(10,0) NOT NULL,
	SERVICE_ID NUMBER(10, 0) NOT NULL,
	SAMPLE_NO NUMBER(15, 0),
	MEDIA_URL VARCHAR2(50),
	TEST_DATE DATE,
	RESULT VARCHAR2(500),
	COMPLETED VARCHAR2(2),
	PATIENT_ID NUMBER(10, 0) NOT NULL,
	
	PRIMARY KEY (TEST_RESULT_ID),
	
	CONSTRAINT FK_TEST_R_SERV FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(SERVICE_ID) ON DELETE SET NULL,
	CONSTRAINT FK_TEST_R_PAT_ID FOREIGN KEY (PATIENT_ID) REFERENCES PERSON(ID) ON DELETE CASCADE
	);
	
	
	
	
CREATE TABLE SURGERY_RESULTS (
	SURGERY_RESULT_ID NUMBER(10,0) NOT NULL,
	SERVICE_ID NUMBER(10, 0) NOT NULL,
	SURGERY_DATE DATE,
	SURGERY_DESC VARCHAR2(500),
	COMPLETED VARCHAR2(2),
	STATUS VARCHAR2(10),
	
	PRIMARY KEY (SURGERY_RESULT_ID),
	
	CONSTRAINT FK_SURGERY_R_SERV FOREIGN KEY (SERVICE_ID) REFERENCES SERVICE(SERVICE_ID) ON DELETE SET NULL
	);
	



	
CREATE TABLE ROOM (
	ROOM_NO NUMBER(3,0) NOT NULL,
	BLOCK_ID VARCHAR2(10) NOT NULL,
	NO_OF_BEDS NUMBER(2,0),
	FUNCTIONALITY VARCHAR2(100),
	CHARGE NUMBER(6,0),
	
	PRIMARY KEY (ROOM_NO),
	
	CONSTRAINT FK_ROOM_BLK FOREIGN KEY (BLOCK_ID) REFERENCES BLOCK(BLOCK_ID) ON DELETE SET NULL
	);
	
	
	
CREATE TABLE SURGERY_SCHEDULE (
	SUR_SCHE_NO NUMBER(10, 0) NOT NULL,
	APP_REF_NO NUMBER(22,0),
	INCHARGE_DOC NUMBER(10,0) NOT NULL,
	PATIENT_ID NUMBER(10,0) NOT NULL,
	ROOM_NO NUMBER(3, 0) NOT NULL,
	TIME_ID NUMBER(3,0) NOT NULL,
	DURATION_HRS NUMBER(4, 2), -- TRIGGER
	
	PRIMARY KEY(SUR_SCHE_NO),
	
	CONSTRAINT FK_SUR_SCH_TIME_T FOREIGN KEY(TIME_ID) REFERENCES TIME_TABLE(TIME_ID) ON DELETE SET NULL,
	CONSTRAINT FK_SUR_SCH_ROOM FOREIGN KEY(ROOM_NO) REFERENCES ROOM(ROOM_NO) ON DELETE SET NULL,
	CONSTRAINT FK_SUR_SCH_APP_SL FOREIGN KEY(APP_REF_NO) REFERENCES APPOINTMENT(APP_SL_NO) ON DELETE SET NULL,
	CONSTRAINT FK_SUR_SCH_IN_DOC FOREIGN KEY(INCHARGE_DOC) REFERENCES PERSON(ID) ON DELETE SET NULL,
	CONSTRAINT FK_SUR_SCH_PAT FOREIGN KEY(PATIENT_ID) REFERENCES PERSON(ID) ON DELETE CASCADE

	);
	
CREATE TABLE DISPENSARY (
	SL_NO NUMBER(10, 0) NOT NULL,
	MED_ID NUMBER(10, 0) NOT NULL,
	ASSIGNED_TO NUMBER(10, 0) NOT NULL,
	QUANTITY_PCS NUMBER(10, 0) NOT NULL,
	PAID VARCHAR2(2),
	DISPENSE_TIME DATE,
	
	PRIMARY KEY(SL_NO),
	
	CONSTRAINT FK_MEDID_MEDID FOREIGN KEY(MED_ID) REFERENCES MEDICINE(MED_ID) ON DELETE SET NULL
	);
	
	
CREATE TABLE BILL (
	FORM_ID NUMBER(10,0) NOT NULL,
	BILL_FORM VARCHAR2(500),
	TOTAL_AMOUNT NUMBER(7,0),
	PATIENT_ID NUMBER(10,0),
	PAYMENT_METHOD VARCHAR2(50),
	
	PRIMARY KEY(FORM_ID),
	CONSTRAINT BILL_PAT_ID FOREIGN KEY(PATIENT_ID) REFERENCES PERSON(ID) ON DELETE SET NULL
	);
	
	
CREATE TABLE NOTIFICATION (
	NOTIFICATION_ID NUMBER(10,0) NOT NULL,
	USER_ID NUMBER,
	STATUS VARCHAR2(2), --STATUS WILL BE R = READ, U = UNREAD, I = IMPORTANT
	MESSAGE VARCHAR2(500),
	
	PRIMARY KEY(NOTIFICATION_ID),
	CONSTRAINT NOTI_USER_ID FOREIGN KEY(USER_ID) REFERENCES PERSON(ID) ON DELETE CASCADE
);

CREATE TABLE DISPENSARY (
	SL_NO NUMBER(10, 0) NOT NULL,
	MED_ID NUMBER(10, 0) NOT NULL,
	ASSIGNED_TO NUMBER(10, 0) NOT NULL,
	QUANTITY_PCS NUMBER(10, 0) NOT NULL,
	PAID VARCHAR2(2),
	DISPENSE_TIME DATE,
	
	PRIMARY KEY(SL_NO),
	
	CONSTRAINT FK_MEDID_MEDID FOREIGN KEY(MED_ID) REFERENCES MEDICINE(MED_ID) ON DELETE SET NULL
	);
	
CREATE TABLE MONITORING_DATA (
	SL_NO NUMBER(10, 0) NOT NULL,
	PATIENT_ID NUMBER(10,0) NOT NULL,
	HEARTBEAT NUMBER(6, 2),
	SYS_BP NUMBER(6, 2),
	DIAS_BP NUMBER(6, 2),
	TEMPERATURE NUMBER(6,2),
	OXY_LEVEL NUMBER(6, 3),
	BREATHING_RATE NUMBER(6, 2),
	TIME TIMESTAMP, 
	
	PRIMARY KEY(SL_NO),
	
	CONSTRAINT FK_DATA_PAT FOREIGN KEY(PATIENT_ID) REFERENCES PERSON(ID) ON DELETE SET NULL
	);
	
CREATE TABLE SESSION_TOKEN(
		SESSION_ID NUMBER,
		USER_ID VARCHAR2(15),
		TOKEN VARCHAR2(100),
		DATE_CREATED DATE,
		
		PRIMARY KEY(SESSION_ID)
	);
	
	
ALTER TABLE APPOINTMENT
DROP COLUMN EST_APPNT_DATE;

ALTER TABLE APPOINTMENT
ADD SCHEDULE_ID NUMBER(10,0);

ALTER TABLE APPOINTMENT
ADD CONSTRAINT APPOINTMENT_SHCEDULE_FK FOREIGN KEY(SCHEDULE_ID) REFERENCES SCHEDULE(SCHEDULE_ID);

ALTER TABLE APPOINTMENT
DROP COLUMN TIME_ID;

ALTER TABLE APPOINTMENT
DROP CONSTRAINT APPOINTMENT_SHCEDULE_FK;

ALTER TABLE BLOCK
MODIFY CATEGORY VARCHAR2(50);

ALTER TABLE BLOCK 
RENAME COLUMN WORKING_STUFFS TO STAFF_REQUIREMENT

ALTER TABLE BLOCK
ADD DESCRIPTION VARCHAR2(200);

ALTER TABLE ROOM
RENAME COLUMN FUNCTIONALITY TO TYPE;

ALTER TABLE ROOM
ADD STATUS VARCHAR2(40);

ALTER TABLE SURGERY_SCHEDULE
ADD SUR_DATE DATE ;

-- me new
ALTER TABLE MEDICINE 
DROP COLUMN STOCK_STATUS;

ALTER TABLE MEDICINE
ADD STOCK NUMBER, PRICE/PIECE NUMBER(*,2);

ALTER TABLE MEDICINE
ADD PRICE_PIECE NUMBER(5,2);

ALTER TABLE DOCTOR 
ADD VISITING_FEE NUMBER(5,0);

ALTER TABLE CHECKUP 
ADD PAYMENT_STATUS VARCHAR2(10);

ALTER TABLE BILL 
RENAME COLUMN PAYMENT_METHOD TO PAYMENT_CATEGORY;

ALTER TABLE BILL 
DROP COLUMN TOTAL_AMOUNT;

ALTER TABLE BILL 
ADD TOTAL_AMOUNT NUMBER(10, 2);
	
ALTER TABLE SURGERY_RESULTS 
MODIFY (SERVICE_ID NULL);

ALTER TABLE SURGERY_RESULTS 
ADD RESULT VARCHAR2(200);

ALTER TABLE SCHEDULE
DROP CONSTRAINT FK_SHCEDULE_BLOCK_ID;

ALTER TABLE SURGERY_RESULTS 
ADD SUR_SCHE_NO NUMBER;

ALTER TABLE TEST_RESULTS 
ADD STATUS VARCHAR2(10);

ALTER TABLE TEST_RESULTS
ADD APP_SL_NO NUMBER;

ALTER TABLE SURGERY_RESULTS 
ADD APP_SL_NO NUMBER;

ALTER TABLE ROOM_ADMISSION 
ADD PAID VARCHAR2(5); -- TRUE (T) OR FALSE (F) 

ALTER TABLE BILL 
DROP COLUMN BILL_FORM

ALTER TABLE BILL 
ADD TRANSACTION_TIME DATE

