select DISTINCT(CATEGORY) from BLOCK;

select ID from Person where USER_ID = 'P25001'

select BLOCK_ID 
from BLOCK
where CATEGORY = 'WARD';

CREATE OR REPLACE PROCEDURE SCHEDULE_RANGE(EMPID IN NUMBER, TIMEID IN VARCHAR2, DAYS IN VARCHAR2, BLOCKID IN VARCHAR2, LENGTH IN VARCHAR2) IS
	START_DATE DATE;
	ANY_DAY VARCHAR2(100);
	MAXVAL NUMBER;
BEGIN
	START_DATE := TRUNC(SYSDATE);
	DELETE FROM PANACEA.SCHEDULE WHERE SCHEDULE_DATE>START_DATE AND ID = EMPID;
	FOR R IN 1..LENGTH
	LOOP
-- 		DBMS_OUTPUT.PUT_LINE(TO_CHAR(START_DATE + R));
		SELECT TO_CHAR((START_DATE + R), 'dy') INTO ANY_DAY FROM dual;
		IF INSTR(DAYS, ANY_DAY)>0 THEN
-- 			DBMS_OUTPUT.PUT_LINE(ANY_DAY);
			SELECT MAX(SCHEDULE_ID) INTO MAXVAL FROM PANACEA.SCHEDULE;
			MAXVAL := MAXVAL + 1;
			INSERT INTO SCHEDULE (SCHEDULE_ID, SCHEDULE_DATE, ID, TIME_ID, BLOCK_ID) VALUES (MAXVAL, START_DATE + R, EMPID, TIMEID, BLOCKID);
		END IF;
	END LOOP;
END;

BEGIN
	SCHEDULE_RANGE(162 , '7', 'sun,mon', '1B', '7');
END;

SELECT TO_CHAR(SYSDATE, 'DY') day FROM dual;

SELECT TRUNC(SYSDATE) FROM DUAL;

SELECT R.ROOM_NO, B.CATEGORY , R.TYPE
FROM ROOM R JOIN BLOCK B
ON R.BLOCK_ID = B.BLOCK_ID

SELECT R.ROOM_NO, B.CATEGORY , R.TYPE
	FROM ROOM R JOIN BLOCK B
	ON R.BLOCK_ID = B.BLOCK_ID AND B.CATEGORY = 'GENERAL_BED' AND R.TYPE='BED'

UPDATE ROOM 
SET CHARGE = 25000
WHERE ROOM_NO IN 
(
	SELECT R.ROOM_NO
	FROM ROOM R JOIN BLOCK B
	ON R.BLOCK_ID = B.BLOCK_ID AND B.CATEGORY = 'SURGERY' --AND R.TYPE='BED'
)


UPDATE PERSON
SET DATE_OF_BIRTH = TRUNC(SYSDATE-(365*28))
WHERE ID = 1;

select (P.FIRST_NAME||' '||P.LAST_NAME) AS PATIENT_NAME FROM 
PERSON P JOIN 
select PATIENT_ID, DOCTOR_ID from APPOINTMENT where APP_SL_NO = 6


SELECT FIRST_NAME FROM PERSON P
, APPOINTMENT A
WHERE A.APP_SL_NO = 6 AND 
A.PATIENT_ID = P.ID


SELECT * FROM 
(
SELECT (FIRST_NAME||' '||LAST_NAME) AS pNAME, EMAIL AS pEMAIL, PHONE_NUM AS pPHONE, GENDER AS pGENDER, 
(ROUND(MONTHS_BETWEEN(SYSDATE, DATE_OF_BIRTH)/12)||' years '||FLOOR(MOD(MONTHS_BETWEEN(SYSDATE, DATE_OF_BIRTH), 12))||' months') as pAGE,
ID AS pID
FROM PERSON 
WHERE ID = 
(SELECT PATIENT_ID FROM APPOINTMENT WHERE 
APP_SL_NO = 6)) P NATURAL JOIN  
(SELECT (P.FIRST_NAME||' '||P.LAST_NAME) AS dNAME, D.DEPARTMENT, P.ID FROM 
DOCTOR D JOIN PERSON P
ON( D.ID = (SELECT DOCTOR_ID FROM APPOINTMENT WHERE 
APP_SL_NO = 6) AND D.ID = P.ID)) D 


SELECT P.FIRST_NAME, D.DEPARTMENT FROM 
DOCTOR D JOIN PERSON P
ON( D.ID = (SELECT DOCTOR_ID FROM APPOINTMENT WHERE 
APP_SL_NO = 6) AND D.ID = P.ID)


BEGIN
	DBMS_OUTPUT.PUT_LINE(TO_DATE('21/12/2020', 'DD/MM/YYYY'));
END;

SELECT E.ID, E.NAME FROM (
SELECT D.ID, (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME FROM DOCTOR D JOIN PERSON P 
ON D.DEPARTMENT =
(SELECT D.DEPARTMENT FROM DOCTOR D
JOIN PERSON P ON (D.ID = P.ID) AND P.ID = 1) AND D.ID=P.ID) E
--SURGERY_SCHEDULE S
WHERE E.ID NOT IN 
(SELECT INCHARGE_DOC FROM SURGERY_SCHEDULE
WHERE TO_CHAR(SUR_DATE) = '29/11/2020')


AND D.ID NOT IN 
(SELECT INCHARGE_DOC FROM SURGERY_SCHEDULEWHERE TO_CHAR(SUR_DATE, 'DD/MM/YYYY') = '29/11/2020') 


SELECT R.ROOM_NO, R.TYPE FROM ROOM R JOIN BLOCK B
ON R.BLOCK_ID = B.BLOCK_ID
AND LOWER(B.CATEGORY) IN 'surgery' 
AND R.ROOM_NO NOT IN
(SELECT ROOM_NO FROM SURGERY_SCHEDULE
WHERE TO_CHAR(SUR_DATE, 'DD/MM/YYYY') = '29/11/2020'
AND TIME_ID = 8) 

SELECT (FIRST_NAME||' '||LAST_NAME) AS pNAME, EMAIL AS pEMAIL, PHONE_NUM AS pPHONE, GENDER AS pGENDER, 
(ROUND(MONTHS_BETWEEN(SYSDATE, DATE_OF_BIRTH)/12)||' years '||FLOOR(MOD(MONTHS_BETWEEN(SYSDATE, DATE_OF_BIRTH), 12))||' months') as pAGE,
ID AS pID
FROM PERSON 
WHERE ID = 88


-- all rooms in ward with rooms empty

SELECT R.ROOM_NO, R.TYPE, B.BLOCK_ID FROM
ROOM R JOIN BLOCK B
ON R.BLOCK_ID = B.BLOCK_ID
AND B.CATEGORY = 'GENERAL_BED' AND R.TYPE='BED'

SELECT BLOCK_ID FROM BLOCK WHERE CATEGORY='GENERAL_BED'


SELECT R.ROOM_NO, R.TYPE, R.CHARGE FROM ROOM R, BLOCK B
WHERE R.BLOCK_ID = B.BLOCK_ID AND
R.TYPE = 'BED' AND
B.CATEGORY = 'GENERAL_BED' AND 
R.ROOM_NO NOT IN (
SELECT RA.ROOM_NO--, COUNT(RA.ROOM_NO)
FROM ROOM_ADMISSION RA
GROUP BY(RA.ROOM_NO)
HAVING COUNT(RA.ROOM_NO) =
(SELECT R.NO_OF_BEDS FROM ROOM R
WHERE R.ROOM_NO = RA.ROOM_NO)
)

SELECT R.ROOM_NO, R.TYPE, R.CHARGE FROM ROOM R, BLOCK B
WHERE R.BLOCK_ID = B.BLOCK_ID AND
B.CATEGORY = 'GENERAL_BED' AND 
R.ROOM_NO NOT IN (
SELECT RA.ROOM_NO
FROM ROOM_ADMISSION RA
GROUP BY(RA.ROOM_NO)
HAVING COUNT(RA.ROOM_NO) =
(SELECT R.NO_OF_BEDS FROM ROOM R
WHERE R.ROOM_NO = RA.ROOM_NO)
)

SELECT DISTINCT(R.TYPE) FROM ROOM R, BLOCK B
WHERE R.BLOCK_ID = B.BLOCK_ID AND B.CATEGORY = 'GENERAL_BED'

SELECT
	ROOM_NO 
FROM
	ROOM_ADMISSION 
WHERE
	PATIENT_ID = 88 
	AND RELEASE_DATE IS NULL;

SELECT * FROM PERSON P, DOCTOR D, EMPLOYEE E 
WHERE (P.ID = D.ID OR P.ID = E.ID) AND P.ID =  
(select ID from person where USER_ID='D21001')

SELECT * FROM PERSON P JOIN DOCTOR E ON P.ID = E.ID AND P.USER_ID = 'D21001'

-- FUNCTION TO GET SQL STATEMENT FOR USERID
CREATE OR REPLACE FUNCTION USER_EXECUTABLE(USER_ID IN VARCHAR2)
RETURN VARCHAR2 IS
	SQL_STAT VARCHAR2(100) ;
BEGIN
	IF INSTR(USER_ID, 'E') > 0 THEN
		SQL_STAT := ('SELECT * FROM PERSON P JOIN EMPLOYEE E ON P.ID=E.ID AND P.USER_ID='||CHR(39)||USER_ID||CHR(39)) ;
	ELSIF INSTR(USER_ID, 'D') > 0 THEN
		SQL_STAT := ('SELECT * FROM PERSON P JOIN DOCTOR D ON P.ID=D.ID AND P.USER_ID='||CHR(39)||USER_ID||CHR(39));
	ELSE 
		SQL_STAT := 'INVALID SQL';
	END IF ;
	RETURN SQL_STAT ; --return the message
EXCEPTION
--you must return value from this section also
	WHEN NO_DATA_FOUND THEN
		RETURN 'No employee found.' ;
	WHEN TOO_MANY_ROWS THEN
		RETURN 'More than one employee found.' ;
	WHEN OTHERS THEN
		RETURN 'Some unknown error occurred.' ;
END ;

BEGIN
	DBMS_OUTPUT.PUT_LINE(USER_EXECUTABLE('D21001'));

	EXECUTE IMMEDIATE USER_EXECUTABLE('D21001');
END;

SELECT
	(P.FIRST_NAME||' '||P.LAST_NAME), P.EMAIL, P.PHONE_NUM, P.GENDER, P.ADDRESS, 
	(ROUND(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH)/12)||' years '||FLOOR(MOD(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH), 12))||' months') as AGE,
	D.DEPARTMENT, D.QUALIFICATION
FROM
	PERSON P
	JOIN DOCTOR D ON P.ID = D.ID 
	AND P.USER_ID = 'D21001'

-- employee 
SELECT
	(P.FIRST_NAME||' '||P.LAST_NAME), P.EMAIL, P.PHONE_NUM, P.GENDER, P.ADDRESS, 
	(ROUND(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH)/12)||' years '||FLOOR(MOD(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH), 12))||' months') as AGE,
	E.CATEGORY, E.TRAINING
FROM
	PERSON P
	JOIN EMPLOYEE E ON P.ID = E.ID 
	AND P.USER_ID = 'E28009'
	
-- change password
DECLARE
		NEW_PASS VARCHAR2(50);
BEGIN
		FOR CUR IN(SELECT USER_ID FROM PERSON ORDER BY ID)
		LOOP
				NEW_PASS := DBMS_CRYPTO.hash(utl_raw.cast_to_raw(CUR.USER_ID), DBMS_CRYPTO.HASH_MD5);
				UPDATE PERSON SET PASSWORD = NEW_PASS
				WHERE USER_ID = CUR.USER_ID;
 					DBMS_OUTPUT.PUT_LINE(NEW_PASS);
		END LOOP;
END;

select * from dba_objects
where object_name = 'DBMS_CRYPTO'

begin
   dbms_output.put_line(dbms_crypto.DES_CBC_PKCS5);
 end;
 
update PERSON set EMAIL = 'jwest@gmail.com' where ID=1;


SELECT (D.FIRST_NAME||' '||D.LAST_NAME) AS DOCTOR_NAME, (SELECT DEPARTMENT FROM DOCTOR WHERE ID = A.DOCTOR_ID), A.PROB_DESC, A.APP_SL_NO,
A.APPNT_DATE, SCH.SCHEDULE_DATE AS VSITING_DATE, CH.CHECKUP_ID
FROM APPOINTMENT A JOIN PERSON D
ON D.ID = A.DOCTOR_ID AND A.PATIENT_ID = 
(SELECT ID FROM PERSON WHERE USER_ID = 'P25002')
AND A.STATUS = 'accepted'
JOIN SCHEDULE SCH ON 
(A.SCHEDULE_ID = SCH.SCHEDULE_ID) 
JOIN CHECKUP CH
ON (A.APP_SL_NO = CH.APP_SL_NO 
AND TRUNC(SCH.SCHEDULE_DATE) = TRUNC(CH.CHECKUP_DATE)
);

select column_name from all_tab_cols where table_name = 'APPOINTMENT'

SELECT
	A.APP_SL_NO,
	( D.FIRST_NAME || ' ' || D.LAST_NAME ) AS DOCTOR_NAME,
	( SELECT DEPARTMENT FROM DOCTOR WHERE ID = A.DOCTOR_ID ) AS DEPARTMENT,
	A.PROB_DESC,
	A.APPNT_DATE,
	SCH.SCHEDULE_DATE AS VISITING_DATE
FROM
	APPOINTMENT A
	JOIN PERSON D ON D.ID = A.DOCTOR_ID 
	AND A.PATIENT_ID = ( SELECT ID FROM PERSON WHERE USER_ID = 'P25002' )
	AND A.STATUS = 'pending'
	JOIN SCHEDULE SCH ON A.SCHEDULE_ID = SCH.SCHEDULE_ID AND 
	SCH.SCHEDULE_DATE >= TRUNC(SYSDATE);
	
UPDATE BLOCK SET INCHARGE_ID = (SELECT ID FROM PERSON WHERE USER_ID = 'D21005') WHERE BLOCK_ID = 'C3'

SELECT ID FROM PERSON WHERE USER_ID = 'D21005'

SELECT A.APP_SL_NO, (P.FIRST_NAME||' '||P.LAST_NAME) AS PATIENT_NAME, D.SERVICE_RESULTS, D.DIAG_DESC
FROM APPOINTMENT A JOIN CHECKUP CH
ON (A.DOCTOR_ID = (SELECT ID FROM PERSON WHERE USER_ID = 'D21046') AND A.APP_SL_NO = CH.APP_SL_NO) 
JOIN DIAGNOSIS D ON (D.DIAGNOSIS_ID = CH.DIAGNOSIS_ID)
JOIN PERSON P ON (P.ID = A.PATIENT_ID)

-- appointment in a range of time
SELECT A.APP_SL_NO,(P.FIRST_NAME||' '||P.LAST_NAME) AS PATIENT_NAME, (D.FIRST_NAME||' '||D.LAST_NAME) AS DOCTOR_NAME,
TO_CHAR(A.APPNT_DATE,'DD/MM/YYYY') AS APPNT_DATE, TO_CHAR(SCH.SCHEDULE_DATE, 'DD/MM/YYYY') AS VISITING_DATE, A.STATUS
FROM APPOINTMENT A JOIN PERSON P 
ON (A.PATIENT_ID= P.ID AND P.ID =(SELECT ID FROM PERSON WHERE USER_ID = 'P25001') 
	AND A.APPNT_DATE>(SYSDATE-30))
JOIN PERSON D 
ON (A.DOCTOR_ID = D.ID) 
JOIN SCHEDULE SCH ON
(A.SCHEDULE_ID = SCH.SCHEDULE_ID)

-- appointments under a doctor
SELECT A.APP_SL_NO,(P.FIRST_NAME||' '||P.LAST_NAME) AS PATIENT_NAME, 
TO_CHAR(A.APPNT_DATE,'DD/MM/YYYY') AS APPNT_DATE, TO_CHAR(SCH.SCHEDULE_DATE, 'DD/MM/YYYY') AS VISITING_DATE, A.STATUS
FROM APPOINTMENT A JOIN PERSON P 
ON A.PATIENT_ID = P.ID AND A.DOCTOR_ID = (SELECT ID FROM PERSON WHERE USER_ID = 'D21001')
JOIN SCHEDULE SCH ON (A.SCHEDULE_ID = SCH.SCHEDULE_ID) ORDER BY A.APP_SL_NO DESC

-- TESTS RECOMMENDED BY A DOCTOR
-- DONE

-- SCHEDULE HISTORY FOR AN EMPLOYEE
SELECT TO_CHAR(SCH.SCHEDULE_DATE, 'DD/MM/YYYY') AS WORKING_DAY, T.SHIFT_TITLE AS CATEGORY, T.START_TIME, T.END_TIME, B.CATEGORY AS WARD
FROM SCHEDULE SCH JOIN TIME_TABLE T ON (SCH.TIME_ID = T.TIME_ID 
AND SCH.ID = (SELECT ID FROM PERSON WHERE USER_ID = 'E28009')
AND SCH.SCHEDULE_DATE<SYSDATE)
JOIN BLOCK B ON B.BLOCK_ID =SCH.BLOCK_ID
ORDER BY SCH.SCHEDULE_DATE DESC



--EMPLOYEES ASSIGNED ON A DATE IN WARDS
SELECT SCH.SCHEDULE_ID, (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, EMPLOYEE_TYPE(P.USER_ID) AS ROLE, 
(SELECT SHIFT_TITLE FROM TIME_TABLE WHERE TIME_ID = SCH.TIME_ID) AS SHIFT, NVL(SCH.BLOCK_ID, 'N/A') AS BLOCKFROM PERSON P JOIN SCHEDULE SCH ON (
TO_CHAR(SCH.SCHEDULE_DATE, 'DD/MM/YYYY') = '02/12/2020' AND
P.ID = SCH.ID )

-- IN A SPECIFIC WARD CATEGORY IN A SPECIFIC DAY
SELECT SCH.SCHEDULE_ID, (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, EMPLOYEE_TYPE(P.USER_ID) AS ROLE, 
(SELECT SHIFT_TITLE FROM TIME_TABLE WHERE TIME_ID = SCH.TIME_ID) AS SHIFT, SCH.BLOCK_ID
FROM PERSON P JOIN SCHEDULE SCH ON (
SCH.SCHEDULE_DATE = TO_DATE('02/12/2020', 'DD/MM/YYYY') AND
P.ID = SCH.ID AND 
SCH.BLOCK_ID IN (SELECT BLOCK_ID FROM BLOCK WHERE CATEGORY='CHAMBER'))
ORDER BY SCH.SCHEDULE_ID DESC;


SELECT DISTINCT(DESIGNATION) FROM DOCTOR 
SELECT ROUND(DBMS_RANDOM.VALUE(30,200)) FROM DUAL

SELECT A.APP_SL_NO, CH.CHECKUP_ID, D.VISITING_FEE FROM APPOINTMENT A JOIN DOCTOR D 
ON A.DOCTOR_ID = D.ID AND A.PATIENT_ID = (SELECT ID FROM PERSON WHERE USER_ID = 'P25002')
AND A.PAYMENT_STATUS = 'DUE'

-- ALL PENDING PAYMENTS FOR CHECKUP
SELECT CH.CHECKUP_ID, CH.APP_SL_NO, A.DOCTOR_ID, D.NAME, D.DEPARTMENT, D.VISITING_FEE, 
TO_CHAR(CH.CHECKUP_DATE, 'DD/MM/YYYY') AS VISITING_DATE, A.PROB_DESC
FROM CHECKUP CH JOIN APPOINTMENT A
ON (CH.APP_SL_NO = A.APP_SL_NO AND A.PATIENT_ID = (SELECT ID FROM PERSON WHERE USER_ID = 'P25030') AND A.STATUS='accepted' 
AND CH.PAYMENT_STATUS = 'DUE') JOIN SCHEDULE SCH ON (SCH.SCHEDULE_ID = A.SCHEDULE_ID AND SCH.SCHEDULE_DATE < SYSDATE)
JOIN (SELECT P.ID AS ID,(P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, DOC.DEPARTMENT, DOC.VISITING_FEE
FROM PERSON P JOIN DOCTOR DOC ON P.ID = DOC.ID ) 
D ON (D.ID = A.DOCTOR_ID) ORDER BY VISITING_DATE DESC;

-- OPERATION THEATRE COST
SELECT R.ROOM_NO, RA.ADMISSION_DATE, R.CHARGE FROM ROOM_ADMISSION RA JOIN ROOM R
ON (RA.ROOM_NO = R.ROOM_NO AND RA.PATIENT_ID = 88 --(SELECT ID FROM PERSON WHERE USER_ID = 'P25002')
AND RA.ROOM_NO IN 
(SELECT R.ROOM_NO FROM ROOM R JOIN BLOCK BON R.BLOCK_ID = B.BLOCK_ID AND B.CATEGORY = 'SURGERY' AND R.STATUS='active')
AND RA.RELEASE_DATE IS NULL AND RA.ADMISSION_DATE <= SYSDATE)

-- ROOM ADMISSION COST
SELECT R.ROOM_NO, TO_CHAR(RA.ADMISSION_DATE, 'DD/MM/YYYY') AS ADMISSION_DATE, (TRUNC(SYSDATE-RA.ADMISSION_DATE)+1) AS DAYS_BETWEEN, R.CHARGE
FROM ROOM_ADMISSION RA JOIN ROOM R
ON (RA.ROOM_NO = R.ROOM_NO AND RA.PATIENT_ID = (SELECT ID FROM PERSON WHERE USER_ID = 'P25002')
AND RA.ROOM_NO NOT IN 
(SELECT R.ROOM_NO FROM ROOM R JOIN BLOCK B
ON R.BLOCK_ID = B.BLOCK_ID AND B.CATEGORY = 'SURGERY' AND R.STATUS='active')
AND RA.RELEASE_DATE IS NULL AND RA.ADMISSION_DATE <= SYSDATE)

-- MEDICINE COST
SELECT MN.MED_NAME, D.QUANTITY_PCS, MN.PRICE_PIECE FROM DISPENSARY D
JOIN MEDICINE MN ON D.MED_ID = MN.MED_ID 
AND D.ASSIGNED_TO = (SELECT ID FROM PERSON WHERE USER_ID = 'P25002')
WHERE D.PAID = 'F'



--ALL CHECKUPS AFTER INSERTION
SELECT CH.CHECKUP_ID
FROM CHECKUP CH JOIN APPOINTMENT A
ON (CH.APP_SL_NO = A.APP_SL_NO AND A.PATIENT_ID = (SELECT ID FROM PERSON WHERE USER_ID = 'P25002') AND A.STATUS='accepted' 
AND CH.PAYMENT_STATUS = 'DUE') 

-- ALL ROOMS AFTER BILL
SELECT ADMISSION_SL FROM ROOM_ADMISSION
WHERE RELEASE_DATE IS NULL AND PATIENT_ID = 52

--ALL MEDICINE AFTER BILL
SELECT SL_NO FROM DISPENSARY
WHERE ASSIGNED_TO = 52 AND PAID='F'

select PATIENT_ID from ROOM_ADMISSION
where RELEASE_DATE is null and ROOM_NO in
(SELECT R.ROOM_NO FROM ROOM R JOIN BLOCK B
ON R.BLOCK_ID = B.BLOCK_ID AND B.CATEGORY = 'ICU' AND R.STATUS='active')

BEGIN
	FOR I IN 0..(100/2)
	LOOP
		DBMS_OUTPUT.PUT_LINE(I);
	END LOOP;
END;

select sl_no from monitoring_data where sl_no < 
((select max(sl_no) from monitoring_data)-100) order by time desc

select sl_no from monitoring_data where time>(LOCALTIMESTAMP(0)-0.0158) order by time

select (LOCALTIMESTAMP(0)-0.20833) from dual

SELECT SL_NO FROM MONITORING_DATA WHERE TIME>(LOCALTIMESTAMP(0)-0.20833) ORDER BY TIME DESC

SELECT * FROM (SELECT * FROM MONITORING_DATA WHERE PATIENT_ID = 46 ORDER BY SL_NO DESC) WHERE ROWNUM<=5


SELECT B.INCHARGE_ID, R.BLOCK_ID, RA.ROOM_NO, (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, P.USER_ID FROM ROOM_ADMISSION RA JOIN ROOM R ON 
(RA.PATIENT_ID = 90 AND RA.RELEASE_DATE IS NULL AND R.ROOM_NO=RA.ROOM_NO) JOIN BLOCK B ON 
(R.BLOCK_ID = B.BLOCK_ID) JOIN PERSON P ON P.ID = 90

UPDATE ROOM_ADMISSION SET RELEASE_DATE = ADMISSION_DATE WHERE ADMISSION_SL = 
(SELECT RA.ADMISSION_SL FROM ROOM_ADMISSION RA JOIN 
(SELECT SS.PATIENT_ID, SS.ROOM_NO, SR.SURGERY_DATE
FROM
SURGERY_RESULTS SR JOIN SURGERY_SCHEDULE SS ON(SR.SUR_SCHE_NO = SS.SUR_SCHE_NO AND SR.SURGERY_RESULT_ID = 60100013)) S
ON (S.PATIENT_ID = RA.PATIENT_ID AND S.ROOM_NO = RA.ROOM_NO AND S.SURGERY_DATE = RA.ADMISSION_DATE))


-- ward details
-- incharge 
SELECT (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, P.EMAIL, P.PHONE_NUM, P.ADDRESS, 
(ROUND(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH)/12)||' years '||FLOOR(MOD(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH), 12))||' months') as AGE,
D.DEPARTMENT, D.DESIGNATION, D.QUALIFICATION FROM PERSON P JOIN DOCTOR D ON
(P.ID = D.ID AND P.ID = 25)

SELECT (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, P.EMAIL, P.PHONE_NUM, P.ADDRESS, 
(ROUND(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH)/12)||' years '||FLOOR(MOD(MONTHS_BETWEEN(SYSDATE, P.DATE_OF_BIRTH), 12))||' months') as AGE,
E.CATEGORY, E.EDUCATION, E.TRAINING FROM PERSON P JOIN EMPLOYEE E
ON (P.ID = E.ID AND P.ID = 159)


SELECT (SELECT (FIRST_NAME||' '||LAST_NAME) FROM PERSON WHERE ID= RA.PATIENT_ID), 
(SELECT USER_ID FROM PERSON WHERE ID= RA.PATIENT_ID),
RA.ADMISSION_DATE, B.BLOCK_ID FROM ROOM_ADMISSION RA JOINROOM R ON (R.ROOM_NO = RA.ROOM_NO AND RA.RELEASE_DATE IS NULL) JOIN BLOCK B
ON (B.BLOCK_ID = R.BLOCK_ID AND B.BLOCK_ID = 'C3')

SELECT (P.FIRST_NAME||' '||P.LAST_NAME), P.EMAIL, P.PHONE_NUM, D.DESIGNATION AS CATEGORY, SCH.SCHEDULE_DATE
FROM PERSON P JOIN DOCTOR D ON (P.ID = D.ID)
JOIN SCHEDULE SCH ON (SCH.ID = P.ID AND SCH.BLOCK_ID = 'B8' AND SCH.SCHEDULE_DATE = TRUNC(SYSDATE))
UNION
SELECT (P.FIRST_NAME||' '||P.LAST_NAME), P.EMAIL, P.PHONE_NUM, E.CATEGORY, SCH.SCHEDULE_DATE
FROM PERSON P JOIN EMPLOYEE E ON (P.ID = E.ID)
JOIN SCHEDULE SCH ON (SCH.ID = E.ID AND SCH.BLOCK_ID = 'B8' AND SCH.SCHEDULE_DATE = TRUNC(SYSDATE))


SELECT P.ID, P.USER_ID FROM BLOCK B JOIN PERSON P ON 
                    (B.BLOCK_ID = 'B3' AND B.INCHARGE_ID = P.ID)
										
										
SELECT (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, P.EMAIL, P.PHONE_NUM, D.DESIGNATION AS CATEGORY
                    FROM PERSON P JOIN DOCTOR D ON (P.ID = D.ID)
                    JOIN SCHEDULE SCH ON (SCH.ID = P.ID AND SCH.BLOCK_ID = 'C3' AND SCH.SCHEDULE_DATE = TRUNC(SYSDATE))
                    UNION
                    SELECT (P.FIRST_NAME||' '||P.LAST_NAME) AS NAME, P.EMAIL, P.PHONE_NUM, E.CATEGORY AS CATEGORY
                    FROM PERSON P JOIN EMPLOYEE E ON (P.ID = E.ID)
                    JOIN SCHEDULE SCH ON (SCH.ID = P.ID AND SCH.BLOCK_ID = 'C3' AND SCH.SCHEDULE_DATE = TRUNC(SYSDATE))


SELECT ROOM_NO FROM ROOM_ADMISSION
                WHERE PATIENT_ID = (select ID from Person where USER_ID = 'P25002') AND RELEASE_DATE IS NULL AND 
								ROOM_NO NOT IN (SELECT R.ROOM_NO FROM ROOM R JOIN BLOCK B ON R.BLOCK_ID = B.BLOCK_ID AND B.CATEGORY = 'SURGERY')
